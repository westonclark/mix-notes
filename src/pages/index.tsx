import { SignIn, useUser } from "@clerk/nextjs";
import Head from "next/head";
import Link from "next/link";
import Image from "next/image";
import { useEffect, useState } from "react";
import { Dispatch, SetStateAction } from "react";

import { api } from "~/utils/api";
import { RouterOptions } from "next/dist/server/router";

import type { NextPage } from "next";
import type { RouterOutputs } from "~/utils/api";
type Project = RouterOutputs["projects"]["getProjects"][number];

type CreateProjectType = {
  setShowCreateProject: Dispatch<SetStateAction<boolean>>;
  showCreateProject: boolean;
};

import { LoadingSpinner } from "~/components/loading";

import folder from "../assets/folder.png";
import addfolder from "../assets/add-folder.png";

import {
  ClerkProvider,
  SignedIn,
  SignedOut,
  SignInButton,
  UserButton,
} from "@clerk/nextjs";

const Home: NextPage = () => {
  const { user } = useUser();
  const { data, isLoading } = api.projects.getProjects.useQuery();

  const [showCreateProject, setShowCreateProject] = useState(false);

  if (!data)
    return (
      <div className="flex h-screen items-center justify-center">
        Something went wrong
      </div>
    );

  if (isLoading) return <LoadingSpinner />;

  return (
    <>
      <Head>
        <title>Mix Notes</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <header className="flex items-center justify-between border-b border-slate-400 bg-scampi-950 p-4">
        <p>MIX NOTES</p>
        <SignedIn>
          {/* Mount the UserButton component */}
          <UserButton afterSignOutUrl="/" />
        </SignedIn>
        <SignedOut>
          {/* Signed out users get sign in button */}
          <SignInButton />
        </SignedOut>
      </header>

      <main className="flex h-screen justify-center">
        <div className="w-full p-2 md:max-w-5xl">
          <div className="flex flex-col">
            {data?.map((project) => (
              <ProjectBox {...project} key={project.name} />
            ))}
            <article
              className="mt-4 flex items-center justify-center gap-2 rounded border border-scampi-600 bg-scampi-950 p-4 transition duration-500 ease-out hover:bg-scampi-900"
              onClick={() =>
                showCreateProject
                  ? setShowCreateProject(false)
                  : setShowCreateProject(true)
              }
            >
              <Image
                src={addfolder}
                height={20}
                width={20}
                alt="add folder picture"
              />
              <span>New Project</span>
            </article>
          </div>
          {showCreateProject && (
            <CreateProject
              showCreateProject={showCreateProject}
              setShowCreateProject={setShowCreateProject}
            />
          )}
        </div>
      </main>
    </>
  );
};

const ProjectBox = (props: Project) => {
  const { id, name } = props;
  return (
    <>
      <article
        className="mt-4 flex items-center gap-2 rounded border border-scampi-300 p-4 transition duration-500 ease-out hover:bg-scampi-950 "
        key={id}
      >
        <Image src={folder} height={20} width={20} alt="folder picture" />
        <span>{name}</span>
      </article>
    </>
  );
};

const CreateProject = (props: CreateProjectType) => {
  const { setShowCreateProject, showCreateProject } = props;
  const { user } = useUser();

  useEffect(() => {
    const closeOnEscapeKey = (e: KeyboardEvent) =>
      e.key === "Escape" ? setShowCreateProject(!showCreateProject) : null;
    document.body.addEventListener("keydown", closeOnEscapeKey);
    return () => {
      document.body.removeEventListener("keydown", closeOnEscapeKey);
    };
  }, []);

  console.log(showCreateProject);
  return (
    <>
      <div></div>
      <form action="" className="flex gap-2 pt-4">
        <input
          type="text"
          placeholder="Project Name"
          className=" rounded border border-scampi-600 bg-neutral-900 p-2 text-scampi-50 outline-none focus:border-scampi-500"
        ></input>
        <button
          type="submit"
          className=" rounded border border-scampi-600 bg-scampi-950 p-2 transition duration-500 ease-out hover:bg-scampi-900"
        >
          Submit
        </button>
      </form>
    </>
  );
};

export default Home;
